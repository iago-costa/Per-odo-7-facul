/*
 * AutomatoAFNDparaAFD.java
 *
 * Created on 22 de Junho de 2007, 10:01
 */

package AutomatoAFNDparaAFD;

import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author  zanuz
 */
public class AutomatoAFNDparaAFD extends javax.swing.JFrame {
    
    /**
     * Creates new form AutomatoAFNDparaAFD
     */
    public AutomatoAFNDparaAFD() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEstados = new javax.swing.JTextField();
        jTextFieldAlfabeto = new javax.swing.JTextField();
        jTextFieldEstadoInicial = new javax.swing.JTextField();
        jTextFieldEntrada = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaTransicaoAFD = new javax.swing.JTable();
        buttonExecutar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResultados = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaTransicaoAFND = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        buttonConverter = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldEstadosFinais = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AFND - Aut\u00f4mato Finito N\u00e3o-Determin\u00edstico - Luciano Zanuz - 2007");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Par\u00e2metros"));
        jLabel4.setText("Estados (K) (entre v\u00edrgulas)");

        jLabel5.setText("Alfabeto (\u03a3) (entre v\u00edrgulas)");

        jLabel7.setText("Estado inicial (s)");

        jTextFieldEstados.setText("q0,q1,q2");

        jTextFieldAlfabeto.setText("0,1");

        jTextFieldEstadoInicial.setText("q0");

        jLabel1.setText("Informe a seq\u00fc\u00eancia de entrada");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldEstadoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldAlfabeto, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldEstados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                    .addComponent(jTextFieldAlfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(jTextFieldEstadoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Aut\u00f4mato Finito Determin\u00edstico"));
        tabelaTransicaoAFD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", null},
                {"", "", "", null},
                {"", "", "", null},
                {"", "", "", null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "q", "\u03c3", "\u03b4(\u03c3,q)", "F"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tabelaTransicaoAFD);

        buttonExecutar.setText("Executar");
        buttonExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExecutarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(buttonExecutar)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExecutar))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));
        jTextAreaResultados.setColumns(40);
        jTextAreaResultados.setEditable(false);
        jTextAreaResultados.setRows(10);
        jScrollPane1.setViewportView(jTextAreaResultados);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Aut\u00f4mato Finito N\u00e3o-Determin\u00edstico"));
        tabelaTransicaoAFND.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"q0", "0", "q0"},
                {"q0", "1", "q0"},
                {"q0", "1", "q1"},
                {"q1", "0", "q2"},
                {"", "", ""},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "q", "\u03c3", "\u03b4(\u03c3,q)"
            }
        ));
        jScrollPane5.setViewportView(tabelaTransicaoAFND);

        jLabel2.setText("Informe a fun\u00e7\u00e3o de transi\u00e7\u00e3o (\u03b4)");

        buttonConverter.setText("Converter para AFD");
        buttonConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConverterActionPerformed(evt);
            }
        });

        jLabel6.setText("Estados finais (F) (entre v\u00edrgulas)");

        jTextFieldEstadosFinais.setText("q2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(buttonConverter))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEstadosFinais)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jTextFieldEstadosFinais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonConverter)
                .addGap(1, 1, 1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, 0, 326, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConverterActionPerformed
// TODO adicione seu código de manipulação aqui:
        
        int i;

        jTextAreaResultados.append("Convertendo autômato finito não-determinístico..." + "\n\n");

        // Algumas inicializações
        qtdLinhasAFND = 0;
        proximaLinhaAFD = 0;

        // Limpa tabelaTransicaoAFD
        for (i=0; i<tabelaTransicaoAFD.getRowCount(); i++) {
            tabelaTransicaoAFD.setValueAt(null,i,0);                  
            tabelaTransicaoAFD.setValueAt(null,i,1);                  
            tabelaTransicaoAFD.setValueAt(null,i,2);                  
            tabelaTransicaoAFD.setValueAt(null,i,3);                  
        }
       
        alfabeto = jTextFieldAlfabeto.getText().split(",");

        // Conta a quantidade de linhas efetivamente utilizadas
        for (i=0; (i<tabelaTransicaoAFND.getRowCount() && tabelaTransicaoAFND.getValueAt(i,0)!=null); i++) {
            if (!tabelaTransicaoAFND.getValueAt(i,0).toString().isEmpty())
                qtdLinhasAFND++;
            else
                break;
        }
        
        jTextAreaResultados.setText("");    // Limpa os resultados
        jTextAreaResultados.append("Convertendo autômato finito não-determinístico..." + "\n\n");
        jTextAreaResultados.append("Constrói estados a partir do estado inicial: " + jTextFieldEstadoInicial.getText() + "\n");      
        
        constroiEstados(jTextFieldEstadoInicial.getText());        
        
        jTextAreaResultados.append("\nFinal da conversão para autômato finito determinístico");        
    }//GEN-LAST:event_buttonConverterActionPerformed

    private void constroiEstados(String estado) {
        int i,j,k;
        String novoEstado,estadoFinal;
        String estados[];
        
        // Percorre uma vez para cada símbolo do alfabeto
        for (j=0; j<alfabeto.length; j++) {
            novoEstado = "";
            estados = estado.split(",");
            
            // Percorre os estados recebidos como parâmetro para encontrar o novo estado
            for (k=0; k<estados.length; k++) {
                // Percorre a tabela de transições do AFND
                for (i=0; i<qtdLinhasAFND; i++) {
                    // Encontra a linha onde o estado de origem é o estado que está sendo testado
                    if (tabelaTransicaoAFND.getValueAt(i,0).toString().equals(estados[k]) &&
                        tabelaTransicaoAFND.getValueAt(i,1).toString().equals(alfabeto[j])) {
                        // Somente inclui em novoEstado se novoEstado não contém o estado
                        if(!contemEstado(novoEstado,tabelaTransicaoAFND.getValueAt(i,2).toString())) {
                            if(novoEstado != "")
                                novoEstado += ",";
                            novoEstado += tabelaTransicaoAFND.getValueAt(i,2).toString();
                        }
                    }
                }
            }

            // Se não encontrou novoEstado então vai para a próxima iteração
            if(novoEstado == "")
                continue;

            // Verifica se novoEstado já foi incluído na tabela AFD
            for (i=0; i<=(proximaLinhaAFD-1); i++) {
                //if (tabelaTransicaoAFD.getValueAt(i,0).toString().equals(novoEstado))
                if (tabelaTransicaoAFD.getValueAt(i,0).toString().equals(estado) &&
                    tabelaTransicaoAFD.getValueAt(i,1).toString().equals(alfabeto[j]) &&
                    tabelaTransicaoAFD.getValueAt(i,2).toString().equals(novoEstado))
                    break;
            }

            // Se novoEstado ainda não foi incluído no AFD, então inclui e constrói novos estados
            if(i>(proximaLinhaAFD-1)) {
                tabelaTransicaoAFD.setValueAt(estado,proximaLinhaAFD,0);                  
                tabelaTransicaoAFD.setValueAt(alfabeto[j],proximaLinhaAFD,1);                  
                tabelaTransicaoAFD.setValueAt(novoEstado,proximaLinhaAFD,2);                  
                estadoFinal = estadoFinalAFND(novoEstado);
                tabelaTransicaoAFD.setValueAt(estadoFinal,proximaLinhaAFD,3);                  
                proximaLinhaAFD++;
                
                jTextAreaResultados.append("---Inclui transição no AFD: " + estado + "  |  " + alfabeto[j] + "  |  " + novoEstado + "  " + estadoFinal + "\n");
                jTextAreaResultados.append("Constrói estados a partir do novo estado: " + novoEstado + "\n");      
                constroiEstados(novoEstado);
            }
        }
    }

    private boolean contemEstado(String estado1, String estado2) {
        int i;
        String estados[] = estado1.split(",");
        
        for (i=0; i<estados.length; i++) {
            if(estados[i].equals(estado2))
                break;
        }
        if(i<estados.length)
            return true;
        else
            return false;
    }
    
    private String estadoFinalAFND(String s) {
        int i,j;     
        String estadosFinais[] = jTextFieldEstadosFinais.getText().split(",");
        String estadosAux[] = s.split(",");
        
        // Verifica se o estado final é um dos estados finais do autômato
        for (i=0; i<estadosFinais.length; i++)
            for (j=0; j<estadosAux.length; j++)
                if (estadosFinais[i].equals(estadosAux[j]))
                    return "*";
        
        return "";
    }   
    
    private void buttonExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExecutarActionPerformed
// TODO adicione seu código de manipulação aqui:

        int i,j;

        jTextAreaResultados.setText("");    // Limpa os resultados

        // Algumas inicializações
        qtdLinhasAFD = 0;

        // Conta a quantidade de linhas efetivamente utilizadas
        for (i=0; (i<tabelaTransicaoAFD.getRowCount() && tabelaTransicaoAFD.getValueAt(i,0)!=null); i++) {
            if (!tabelaTransicaoAFD.getValueAt(i,0).toString().isEmpty())
                qtdLinhasAFD++;
            else
                break;
        }

        // Autômato executando
        jTextAreaResultados.append("Autômato percorrendo a seqüência de entrada, aguarde..." + "\n\n");

        String p = jTextFieldEstadoInicial.getText().toString();    // Seleciona o estado inicial
        jTextAreaResultados.append("-->" + p);                      // Imprime o estado inicial
        for (i=0; i<jTextFieldEntrada.getText().length(); i++) {
            // Encontra o próximo estado
            p = proximoEstado(p, jTextFieldEntrada.getText().substring(i,i+1)); 
            jTextAreaResultados.append("\n" + p);                   // Imprime o estado atual            
        }
        
        if (estadoFinalAFD(p))
            jTextAreaResultados.append("\n\n" + "Entrada aceita!");
        else
            jTextAreaResultados.append("\n\n" + "Entrada rejeitada!");

        // Fim da execução do autômato
    }//GEN-LAST:event_buttonExecutarActionPerformed

    private String proximoEstado(String p1, String p2) {
        int i;
        String s = null;
        
        // Encontra uma entrada na tabela de transição de estados
        for (i=0; i<qtdLinhasAFD; i++) {
            if (tabelaTransicaoAFD.getValueAt(i,0).toString().equals(p1) &&
                tabelaTransicaoAFD.getValueAt(i,1).toString().equals(p2)) {
                s = tabelaTransicaoAFD.getValueAt(i,2).toString();
                break;
            }
        }
            
        return s;
    }

    private boolean estadoFinalAFD(String s) {
        int i;     

        for (i=0; i<qtdLinhasAFD; i++)
            if (tabelaTransicaoAFD.getValueAt(i,2).toString().equals(s) &&
                tabelaTransicaoAFD.getValueAt(i,3).toString().equals("*"))
                return true;

        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AutomatoAFNDparaAFD().setVisible(true);
            }
        });
    }
    
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    private javax.swing.JButton buttonConverter;
    private javax.swing.JButton buttonExecutar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextAreaResultados;
    private javax.swing.JTextField jTextFieldAlfabeto;
    private javax.swing.JTextField jTextFieldEntrada;
    private javax.swing.JTextField jTextFieldEstadoInicial;
    private javax.swing.JTextField jTextFieldEstados;
    private javax.swing.JTextField jTextFieldEstadosFinais;
    private javax.swing.JTable tabelaTransicaoAFD;
    private javax.swing.JTable tabelaTransicaoAFND;
    // Fim da declaração de variáveis//GEN-END:variables
    
    private String alfabeto[];
    private int proximaLinhaAFD;
    private int qtdLinhasAFND;
    private int qtdLinhasAFD;
}
